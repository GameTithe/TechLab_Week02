#include "GeometryVertexBufferManager.h"



FVertex sphere_vertices[] =
{
	// 상단 극점 (Top pole)
	{{0.000000f,0.000000f,1.000000f},{0.500000f,0.500000f,1.000000f,1.0f}},
	{{0.866025f,0.000000f,0.500000f},{0.933013f,0.500000f,0.750000f,1.0f}},
	{{0.433013f,-0.750000f,0.500000f},{0.716506f,0.125000f,0.750000f,1.0f}},
	{{0.000000f,0.000000f,1.000000f},{0.500000f,0.500000f,1.000000f,1.0f}},
	{{0.433013f,0.750000f,0.500000f},{0.716506f,0.875000f,0.750000f,1.0f}},
	{{0.866025f,0.000000f,0.500000f},{0.933013f,0.500000f,0.750000f,1.0f}},
	{{0.000000f,0.000000f,1.000000f},{0.500000f,0.500000f,1.000000f,1.0f}},
	{{-0.433013f,0.750000f,0.500000f},{0.283494f,0.875000f,0.750000f,1.0f}},
	{{0.433013f,0.750000f,0.500000f},{0.716506f,0.875000f,0.750000f,1.0f}},
	{{0.000000f,0.000000f,1.000000f},{0.500000f,0.500000f,1.000000f,1.0f}},
	{{-0.866025f,0.000000f,0.500000f},{0.066987f,0.500000f,0.750000f,1.0f}},
	{{-0.433013f,0.750000f,0.500000f},{0.283494f,0.875000f,0.750000f,1.0f}},
	{{0.000000f,0.000000f,1.000000f},{0.500000f,0.500000f,1.000000f,1.0f}},
	{{-0.433013f,-0.750000f,0.500000f},{0.283494f,0.125000f,0.750000f,1.0f}},
	{{-0.866025f,0.000000f,0.500000f},{0.066987f,0.500000f,0.750000f,1.0f}},
	{{0.000000f,0.000000f,1.000000f},{0.500000f,0.500000f,1.000000f,1.0f}},
	{{0.433013f,-0.750000f,0.500000f},{0.716506f,0.125000f,0.750000f,1.0f}},
	{{-0.433013f,-0.750000f,0.500000f},{0.283494f,0.125000f,0.750000f,1.0f}},

	// 중간 부분 (Middle band)
	{{0.866025f,0.000000f,0.500000f},{0.933013f,0.500000f,0.750000f,1.0f}},
	{{0.866025f,0.000000f,-0.500000f},{0.933013f,0.500000f,0.250000f,1.0f}},
	{{0.433013f,-0.750000f,0.500000f},{0.716506f,0.125000f,0.750000f,1.0f}},
	{{0.866025f,0.000000f,-0.500000f},{0.933013f,0.500000f,0.250000f,1.0f}},
	{{0.433013f,-0.750000f,-0.500000f},{0.716506f,0.125000f,0.250000f,1.0f}},
	{{0.433013f,-0.750000f,0.500000f},{0.716506f,0.125000f,0.750000f,1.0f}},
	{{0.433013f,0.750000f,0.500000f},{0.716506f,0.875000f,0.750000f,1.0f}},
	{{0.433013f,0.750000f,-0.500000f},{0.716506f,0.875000f,0.250000f,1.0f}},
	{{0.866025f,0.000000f,0.500000f},{0.933013f,0.500000f,0.750000f,1.0f}},
	{{0.433013f,0.750000f,-0.500000f},{0.716506f,0.875000f,0.250000f,1.0f}},
	{{0.866025f,0.000000f,-0.500000f},{0.933013f,0.500000f,0.250000f,1.0f}},
	{{0.866025f,0.000000f,0.500000f},{0.933013f,0.500000f,0.750000f,1.0f}},
	{{-0.433013f,0.750000f,0.500000f},{0.283494f,0.875000f,0.750000f,1.0f}},
	{{-0.433013f,0.750000f,-0.500000f},{0.283494f,0.875000f,0.250000f,1.0f}},
	{{0.433013f,0.750000f,0.500000f},{0.716506f,0.875000f,0.750000f,1.0f}},
	{{-0.433013f,0.750000f,-0.500000f},{0.283494f,0.875000f,0.250000f,1.0f}},
	{{0.433013f,0.750000f,-0.500000f},{0.716506f,0.875000f,0.250000f,1.0f}},
	{{0.433013f,0.750000f,0.500000f},{0.716506f,0.875000f,0.750000f,1.0f}},
	{{-0.866025f,0.000000f,0.500000f},{0.066987f,0.500000f,0.750000f,1.0f}},
	{{-0.866025f,0.000000f,-0.500000f},{0.066987f,0.500000f,0.250000f,1.0f}},
	{{-0.433013f,0.750000f,0.500000f},{0.283494f,0.875000f,0.750000f,1.0f}},
	{{-0.866025f,0.000000f,-0.500000f},{0.066987f,0.500000f,0.250000f,1.0f}},
	{{-0.433013f,0.750000f,-0.500000f},{0.283494f,0.875000f,0.250000f,1.0f}},
	{{-0.433013f,0.750000f,0.500000f},{0.283494f,0.875000f,0.750000f,1.0f}},
	{{-0.433013f,-0.750000f,0.500000f},{0.283494f,0.125000f,0.750000f,1.0f}},
	{{-0.433013f,-0.750000f,-0.500000f},{0.283494f,0.125000f,0.250000f,1.0f}},
	{{-0.866025f,0.000000f,0.500000f},{0.066987f,0.500000f,0.750000f,1.0f}},
	{{-0.433013f,-0.750000f,-0.500000f},{0.283494f,0.125000f,0.250000f,1.0f}},
	{{-0.866025f,0.000000f,-0.500000f},{0.066987f,0.500000f,0.250000f,1.0f}},
	{{-0.866025f,0.000000f,0.500000f},{0.066987f,0.500000f,0.750000f,1.0f}},
	{{0.433013f,-0.750000f,0.500000f},{0.716506f,0.125000f,0.750000f,1.0f}},
	{{0.433013f,-0.750000f,-0.500000f},{0.716506f,0.125000f,0.250000f,1.0f}},
	{{-0.433013f,-0.750000f,0.500000f},{0.283494f,0.125000f,0.750000f,1.0f}},
	{{0.433013f,-0.750000f,-0.500000f},{0.716506f,0.125000f,0.250000f,1.0f}},
	{{-0.433013f,-0.750000f,-0.500000f},{0.283494f,0.125000f,0.250000f,1.0f}},
	{{-0.433013f,-0.750000f,0.500000f},{0.283494f,0.125000f,0.750000f,1.0f}},

	// 하단 극점 (Bottom pole)
	{{0.000000f,0.000000f,-1.000000f},{0.500000f,0.500000f,0.000000f,1.0f}},
	{{0.433013f,-0.750000f,-0.500000f},{0.716506f,0.125000f,0.250000f,1.0f}},
	{{0.866025f,0.000000f,-0.500000f},{0.933013f,0.500000f,0.250000f,1.0f}},
	{{0.000000f,0.000000f,-1.000000f},{0.500000f,0.500000f,0.000000f,1.0f}},
	{{0.866025f,0.000000f,-0.500000f},{0.933013f,0.500000f,0.250000f,1.0f}},
	{{0.433013f,0.750000f,-0.500000f},{0.716506f,0.875000f,0.250000f,1.0f}},
	{{0.000000f,0.000000f,-1.000000f},{0.500000f,0.500000f,0.000000f,1.0f}},
	{{0.433013f,0.750000f,-0.500000f},{0.716506f,0.875000f,0.250000f,1.0f}},
	{{-0.433013f,0.750000f,-0.500000f},{0.283494f,0.875000f,0.250000f,1.0f}},
	{{0.000000f,0.000000f,-1.000000f},{0.500000f,0.500000f,0.000000f,1.0f}},
	{{-0.433013f,0.750000f,-0.500000f},{0.283494f,0.875000f,0.250000f,1.0f}},
	{{-0.866025f,0.000000f,-0.500000f},{0.066987f,0.500000f,0.250000f,1.0f}},
	{{0.000000f,0.000000f,-1.000000f},{0.500000f,0.500000f,0.000000f,1.0f}},
	{{-0.866025f,0.000000f,-0.500000f},{0.066987f,0.500000f,0.250000f,1.0f}},
	{{-0.433013f,-0.750000f,-0.500000f},{0.283494f,0.125000f,0.250000f,1.0f}},
	{{0.000000f,0.000000f,-1.000000f},{0.500000f,0.500000f,0.000000f,1.0f}},
	{{-0.433013f,-0.750000f,-0.500000f},{0.283494f,0.125000f,0.250000f,1.0f}},
	{{0.433013f,-0.750000f,-0.500000f},{0.716506f,0.125000f,0.250000f,1.0f}},
};

FVertex triangle_vertices[] =
{
	{{0.0f,1.0f,0.0f},{1.0f,0.0f,0.0f,1.0f}}, // Top vertex (red)
	{{1.0f,-1.0f,0.0f},{0.0f,1.0f,0.0f,1.0f}}, // Bottom-right vertex (green).
	{{-1.0f,-1.0f,0.0f},{0.0f,0.0f,1.0f,1.0f}}  // Bottom-left vertex (blue)
};

//TODO d
FVertex cube_vertices[] =
{
	// +X (Right, red)
	{{+1,-1,-1},{1,0,0,1}},{{+1,+1,-1},{1,0,0,1}},{{+1,+1,+1},{1,0,0,1}},
	{{+1,-1,-1},{1,0,0,1}},{{+1,+1,+1},{1,0,0,1}},{{+1,-1,+1},{1,0,0,1}},

	// -X (Left, green)
	{{-1,-1,+1},{0,1,0,1}},{{-1,+1,+1},{0,1,0,1}},{{-1,+1,-1},{0,1,0,1}},
	{{-1,-1,+1},{0,1,0,1}},{{-1,+1,-1},{0,1,0,1}},{{-1,-1,-1},{0,1,0,1}},

	// +Y (Top, blue)
	{{-1,+1,-1},{0,0,1,1}},{{-1,+1,+1},{0,0,1,1}},{{+1,+1,+1},{0,0,1,1}},
	{{-1,+1,-1},{0,0,1,1}},{{+1,+1,+1},{0,0,1,1}},{{+1,+1,-1},{0,0,1,1}},

	// -Y (Bottom, yellow)
	{{-1,-1,+1},{1,1,0,1}},{{-1,-1,-1},{1,1,0,1}},{{+1,-1,-1},{1,1,0,1}},
	{{-1,-1,+1},{1,1,0,1}},{{+1,-1,-1},{1,1,0,1}},{{+1,-1,+1},{1,1,0,1}},

	// +Z (Front, magenta)
	{{-1,-1,+1},{1,0,1,1}},{{+1,-1,+1},{1,0,1,1}},{{+1,+1,+1},{1,0,1,1}},
	{{-1,-1,+1},{1,0,1,1}},{{+1,+1,+1},{1,0,1,1}},{{-1,+1,+1},{1,0,1,1}},

	// -Z (Back, cyan)
	{{+1,-1,-1},{0,1,1,1}},{{-1,-1,-1},{0,1,1,1}},{{-1,+1,-1},{0,1,1,1}},
	{{+1,-1,-1},{0,1,1,1}},{{-1,+1,-1},{0,1,1,1}},{{+1,+1,-1},{0,1,1,1}},
};

// XZ 평면에 위치하고 정점 순서가 시계 방향(CW)인 사각형 평면
FVertex plane_vertices[] =
{
	// 첫 번째 삼각형 (시계 방향)
	{{-1.0f,0.0f,-1.0f},{1.0f,1.0f,1.0f,1.0f}}, // 좌측 후면 (Left-Back)
	{{1.0f,0.0f,1.0f},{1.0f,1.0f,1.0f,1.0f}}, // 우측 전면 (Right-Front)
	{{1.0f,0.0f,-1.0f},{1.0f,1.0f,1.0f,1.0f}}, // 우측 후면 (Right-Back)

	// 두 번째 삼각형 (시계 방향)
	{{-1.0f,0.0f,-1.0f},{1.0f,1.0f,1.0f,1.0f}}, // 좌측 후면 (Left-Back)
	{{-1.0f,0.0f,1.0f},{1.0f,1.0f,1.0f,1.0f}}, // 좌측 전면 (Left-Front)
	{{1.0f,0.0f,1.0f},{1.0f,1.0f,1.0f,1.0f}}  // 우측 전면 (Right-Front)
};

void GeometryVertexBufferManager::Init()
{
    bIsInitialized = true;
    // TODO: D3DUtil 이용해 기본 Primitive 버퍼 생성
   D3DUtil::CreateVertexBuffer(sphere_vertices,&SphereVertexBuffer, sizeof(sphere_vertices));
    D3DUtil::CreateVertexBuffer(cube_vertices, &CubeVertexBuffer, sizeof(cube_vertices));
    D3DUtil::CreateVertexBuffer(plane_vertices, &PlaneVertexBuffer, sizeof(plane_vertices));
    
    NumSphereVertices = sizeof(sphere_vertices) / sizeof(FVertex);
    NumCubeVertices = sizeof(cube_vertices) / sizeof(FVertex);
    NumPlaneVertices = sizeof(plane_vertices) / sizeof(FVertex);
}


int GeometryVertexBufferManager::GetNumSphereVertices() const
{
    return NumSphereVertices;
}
int GeometryVertexBufferManager::GetNumCubeVertices() const
{
    return NumCubeVertices;

}
int GeometryVertexBufferManager::GetNumPlaneVertices() const
{
    return NumPlaneVertices;

}
ID3D11Buffer* GeometryVertexBufferManager::GetSphereVertexBuffer() const
{
    return SphereVertexBuffer;
}

ID3D11Buffer* GeometryVertexBufferManager::GetCubeVertexBuffer() const
{
    return CubeVertexBuffer;
}

ID3D11Buffer* GeometryVertexBufferManager::GetPlaneVertexBuffer() const
{
    return PlaneVertexBuffer;
}

GeometryVertexBufferManager::~GeometryVertexBufferManager()
{
    if(SphereVertexBuffer)
    {
        SphereVertexBuffer->Release();
        SphereVertexBuffer = nullptr;
    }
    if(CubeVertexBuffer)
    {
        CubeVertexBuffer->Release();
        CubeVertexBuffer = nullptr;
    }
    if(PlaneVertexBuffer)
    {
        PlaneVertexBuffer->Release();
        PlaneVertexBuffer = nullptr;
    }
}
